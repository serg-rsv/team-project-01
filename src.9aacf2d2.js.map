{"version":3,"sources":["js/mobile-menu.js","js/lib/modal-multy.js","index.js"],"names":["refs","openMenuBtn","document","querySelector","closeMenuBtn","mobileMenu","toggleModal","classList","toggle","addEventListener","e","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","t","o","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","window","Element","prototype","modalButtons","overlay","closeButtons","forEach","item","preventDefault","modalId","getAttribute","add","remove","body","keyCode"],"mappings":";;;AAAA,MACQA,MAAAA,EAAO,CACXC,YAAaC,SAASC,cAAc,wBACpCC,aAAcF,SAASC,cAAc,yBACrCE,WAAYH,SAASC,cAAc,gBAM5BG,SAAAA,IACPN,EAAKK,WAAWE,UAAUC,OAAO,aAJnCR,EAAKC,YAAYQ,iBAAiB,QAASH,GAC3CN,EAAKI,aAAaK,iBAAiB,QAASH,IAR9C;;CCAE,SAAUI,GACI,mBAAOA,EAAEC,UACpBD,EAAEC,QACDD,EAAEE,mBACFF,EAAEG,oBACFH,EAAEI,uBACF,SAAUJ,GAEN,IAAA,IAAIK,EAAI,KAAMC,GAAKD,EAAEb,UAAYa,EAAEE,eAAeC,iBAAiBR,GAAIS,EAAI,EAC3EH,EAAEG,IAAMH,EAAEG,KAAOJ,KAGfI,EACGC,OAAAA,QAAQJ,EAAEG,MAErB,mBAAqBT,EAAEW,UACpBX,EAAEW,QAAU,SAAUX,GAChB,IAAA,IAAIK,EAAI,KAAMA,GAAK,IAAMA,EAAEO,UAAY,CACtCP,GAAAA,EAAEJ,QAAQD,GAAI,OAAOK,EACzBA,EAAIA,EAAEQ,WAED,OAAA,OArBb,CAuBCC,OAAOC,QAAQC,WAElBxB,SAASO,iBAAiB,mBAAoB,WAGxCkB,IAAAA,EAAezB,SAASgB,iBAAiB,kBAC3CU,EAAU1B,SAASC,cAAc,qBACjC0B,EAAe3B,SAASgB,iBAAiB,mBAG3CS,EAAaG,QAAQ,SAAUC,GAE7BA,EAAKtB,iBAAiB,QAAS,SAAUC,GAIvCA,EAAEsB,iBAIEC,IAAAA,EAAU,KAAKC,aAAa,cAClBhC,SAASC,cAAc,sBAAwB8B,EAAU,MAI7D1B,UAAU4B,IAAI,UACxBP,EAAQrB,UAAU4B,IAAI,cAI1BN,EAAaC,QAAQ,SAAUC,GAC7BA,EAAKtB,iBAAiB,QAAS,SAAUC,GACrB,KAAKW,QAAQ,UAEnBd,UAAU6B,OAAO,UAC7BR,EAAQrB,UAAU6B,OAAO,cAI7BlC,SAASmC,KAAK5B,iBACZ,QACA,SAAUC,GAGG,IAFDA,EAAE4B,UAGVpC,SAASC,cAAc,iBAAiBI,UAAU6B,OAAO,UACzDlC,SAASC,cAAc,YAAYI,UAAU6B,OAAO,aAGxD,GAGFR,EAAQnB,iBAAiB,QAAS,WAChCP,SAASC,cAAc,iBAAiBI,UAAU6B,OAAO,UACpD7B,KAAAA,UAAU6B,OAAO;;AC3E1B,aAFA,QAAA,oBACA,QAAA,oBACA,QAAA","file":"src.9aacf2d2.js","sourceRoot":"../src","sourcesContent":["(() => {\n  const refs = {\n    openMenuBtn: document.querySelector('[data-menu-btn-open]'),\n    closeMenuBtn: document.querySelector('[data-menu-btn-close]'),\n    mobileMenu: document.querySelector('[data-menu]'),\n  };\n\n  refs.openMenuBtn.addEventListener('click', toggleModal);\n  refs.closeMenuBtn.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.mobileMenu.classList.toggle('is-hidden');\n  }\n})();\n","!(function (e) {\n  'function' != typeof e.matches &&\n    (e.matches =\n      e.msMatchesSelector ||\n      e.mozMatchesSelector ||\n      e.webkitMatchesSelector ||\n      function (e) {\n        for (\n          var t = this, o = (t.document || t.ownerDocument).querySelectorAll(e), n = 0;\n          o[n] && o[n] !== t;\n\n        )\n          ++n;\n        return Boolean(o[n]);\n      }),\n    'function' != typeof e.closest &&\n      (e.closest = function (e) {\n        for (var t = this; t && 1 === t.nodeType; ) {\n          if (t.matches(e)) return t;\n          t = t.parentNode;\n        }\n        return null;\n      });\n})(window.Element.prototype);\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n  var modalButtons = document.querySelectorAll('.js-open-modal'),\n    overlay = document.querySelector('.js-overlay-modal'),\n    closeButtons = document.querySelectorAll('.js-modal-close');\n\n  /* Перебираем массив кнопок */\n  modalButtons.forEach(function (item) {\n    /* Назначаем каждой кнопке обработчик клика */\n    item.addEventListener('click', function (e) {\n      /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n      e.preventDefault();\n\n      /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n      var modalId = this.getAttribute('data-modal'),\n        modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n      /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n      modalElem.classList.add('active');\n      overlay.classList.add('active');\n    }); // end click\n  }); // end foreach\n\n  closeButtons.forEach(function (item) {\n    item.addEventListener('click', function (e) {\n      var parentModal = this.closest('.modal');\n\n      parentModal.classList.remove('active');\n      overlay.classList.remove('active');\n    });\n  }); // end foreach\n\n  document.body.addEventListener(\n    'keyup',\n    function (e) {\n      var key = e.keyCode;\n\n      if (key == 27) {\n        document.querySelector('.modal.active').classList.remove('active');\n        document.querySelector('.overlay').classList.remove('active');\n      }\n    },\n    false,\n  );\n\n  overlay.addEventListener('click', function () {\n    document.querySelector('.modal.active').classList.remove('active');\n    this.classList.remove('active');\n  });\n}); // end ready\n","import './sass/main.scss';\nimport './js/mobile-menu';\nimport './js/lib/modal-multy';\n"]}